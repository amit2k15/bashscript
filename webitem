from pyzabbix import ZabbixAPI
import pandas as pd

# Zabbix server credentials
zabbix_url = "http://your_zabbix_server_url"
zabbix_user = "your_zabbix_username"
zabbix_password = "your_zabbix_password"
host_group_name = "your_host_group_name"

# Connect to Zabbix API
zapi = ZabbixAPI(zabbix_url)
zapi.login(zabbix_user, zabbix_password)

# Fetch host group ID
host_groups = zapi.hostgroup.get(filter={"name": host_group_name})
if not host_groups:
    raise ValueError(f"No host group found with name {host_group_name}")

host_group_id = host_groups[0]['groupid']

# Fetch hosts
hosts = zapi.host.get(groupids=host_group_id, output=['hostid', 'name', 'status'])

# Initialize data list
data = []

for host in hosts:
    host_id = host['hostid']
    host_name = host['name']
    host_status = 'Enabled' if host['status'] == '0' else 'Disabled'

    # Fetch web scenarios
    web_scenarios = zapi.httptest.get(hostids=host_id, output=['name', 'status', 'delay'])
    for scenario in web_scenarios:
        scenario_name = scenario['name']
        scenario_status = 'Enabled' if scenario['status'] == '0' else 'Disabled'
        delay = scenario['delay']

        # Fetch triggers
        triggers = zapi.trigger.get(hostids=host_id, output=['description', 'priority', 'status'], expandDescription=True)
        for trigger in triggers:
            if 'URL:' not in trigger['description']:
                continue
            
            trigger_name = trigger['description']
            trigger_status = 'Enabled' if trigger['status'] == '0' else 'Disabled'
            trigger_severity = {
                '1': 'Information',
                '2': 'Minor',
                '3': 'Warning',
                '4': 'Major'
            }.get(trigger['priority'], 'Unknown')

            # Fetch URLs from items
            items = zapi.item.get(triggerids=trigger['triggerid'], output=['url'])
            for item in items:
                url = item.get('url')
                if url:
                    data.append({
                        'Host Name': host_name,
                        'Host Status': host_status,
                        'Web Scenario Name': scenario_name,
                        'Scenario Status': scenario_status,
                        'URL': url,
                        'Delay': delay,
                        'Trigger Name': trigger_name,
                        'Trigger Severity': trigger_severity,
                        'Trigger Status': trigger_status,
                        'Host Group': host_group_name
                    })

# Convert data to DataFrame
df = pd.DataFrame(data)

# Write DataFrame to Excel
excel_file = 'zabbix_report.xlsx'
df.to_excel(excel_file, index=False)

print(f"Report generated successfully and saved to {excel_file}")
