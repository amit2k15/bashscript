import pandas as pd
from pyzabbix import ZabbixAPI
from datetime import datetime, timedelta

# Zabbix API details
zabbix_url = 'http://zabbix.example.com/zabbix'
zabbix_user = 'your_zabbix_username'
zabbix_pass = 'your_zabbix_password'

# Host group name and time interval
host_group_name = 'Your Host Group Name'
time_interval_days = 7

# Connect to Zabbix API
zapi = ZabbixAPI(url=zabbix_url, user=zabbix_user, password=zabbix_pass)

# Get host group ID
host_group = zapi.hostgroup.get(filter={"name": host_group_name}, output="extend")
if not host_group:
    print("Host group not found")
    exit()
host_group_id = host_group[0]["groupid"]

# Get hosts in the host group
hosts = zapi.host.get(groupids=[host_group_id], output="extend")
if not hosts:
    print("No hosts found in the host group")
    exit()

# Get time range for data retrieval
to_time = datetime.now()
from_time = to_time - timedelta(days=time_interval_days)

# Retrieve CPU and memory data for each host
data_frames = {}
for host in hosts:
    host_name = host["name"]
    host_id = host["hostid"]

    # Get CPU utilization data
    cpu_items = zapi.item.get(hostids=[host_id], search={"key_": "system.cpu.util"}, output="extend")
    cpu_item_ids = [item["itemid"] for item in cpu_items]
    cpu_data = zapi.history.get(itemids=cpu_item_ids, time_from=int(from_time.timestamp()), time_till=int(to_time.timestamp()), output="extend", history=0)
    cpu_values = [float(item["value"]) for item in cpu_data]
    cpu_timestamps = [datetime.fromtimestamp(int(item["clock"])) for item in cpu_data]

    # Get memory utilization data
    mem_items = zapi.item.get(hostids=[host_id], search={"key_": "vm.memory.util"}, output="extend")
    mem_item_ids = [item["itemid"] for item in mem_items]
    mem_data = zapi.history.get(itemids=mem_item_ids, time_from=int(from_time.timestamp()), time_till=int(to_time.timestamp()), output="extend", history=0)
    mem_values = [float(item["value"]) for item in mem_data]
    mem_timestamps = [datetime.fromtimestamp(int(item["clock"])) for item in mem_data]

    # Create data frame for host data
    host_data = pd.DataFrame({"CPU Utilization": cpu_values, "Memory Utilization": mem_values}, index=cpu_timestamps)
    host_data.index.name = "Timestamp"
    data_frames[host_name] = host_data

# Create Excel file with individual sheets for each host
writer = pd.ExcelWriter("host_data.xlsx")
for host_name, data_frame in data_frames.items():
    data_frame.to_excel(writer, sheet_name=host_name)
writer.save()

print("Data saved to host_data.xlsx")
