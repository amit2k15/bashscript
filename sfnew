#!/bin/bash

# Check if all required arguments are provided
if [[ $# -ne 4 ]]; then
  echo "Usage: $0 <host> <port> <user> <password>"
  exit 1
fi

# Read input arguments
host=$1
port=$2
user=$3
password=$4

# Escape any special characters in the password to avoid issues with 'expect'
escaped_password=$(printf '%s\n' "$password" | sed -e 's/[]\/$*.^[]/\\&/g')

# Use 'expect' to interact with 'sftp' and handle host key verification prompt
expect -c "
  set timeout 10
  spawn sftp -P $port $user@$host
  expect {
    \"Are you sure you want to continue connecting (yes/no)?\" {
      send \"yes\r\"
      exp_continue
    }
    \"password:\" {
      send \"$escaped_password\r\"
    }
  }
  interact
"
