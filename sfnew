#!/usr/bin/expect

# Check if all required arguments are provided
if {$argc != 4} {
    puts "Usage: $argv0 <host> <port> <user> <password>"
    exit 1
}

# Assign command-line arguments to variables
set host [lindex $argv 0]
set port [lindex $argv 1]
set user [lindex $argv 2]
set password [lindex $argv 3]

# Command to check SFTP authentication
set sftp_command "sftp -P $port $user@$host"

# Spawn the sftp command
spawn $sftp_command

# Look for specific patterns to handle different scenarios
expect {
    # If prompted for a password, send the password
    "password:" {
        send "$password\r"
        exp_continue
    }
    # If the connection is successful, print a success message
    "sftp>" {
        puts "SFTP authentication successful!"
    }
    # If authentication fails, print an error message
    "Permission denied, please try again." {
        puts "Authentication failed. Please check your credentials."
        exit 1
    }
    # If some other unexpected output occurs, print an error message
    default {
        puts "Error: Unexpected output. Please check your inputs and try again."
        exit 1
    }
}

# Wait for the command to finish
expect eof
